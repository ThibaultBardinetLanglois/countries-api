{"version":3,"sources":["components/Navigation.js","components/Card.js","components/Countries.js","pages/Home.js","pages/CountryDetails.js","App.js","index.js"],"names":["Navigation","className","exact","to","activeClassName","Card","props","country","name","common","src","flags","alt","region","capital","population","Countries","document","querySelector","getElementsByClassName","checkboxList","useState","data","setData","filteredData","setFilteredData","tapeInput","setTapeInput","sortByPopulation","setSortByPopulation","sortByAfrica","setSortByAfrica","sortByAmerica","setSortByAmerica","sortByAsia","setSortByAsia","sortByEurope","setSortByEurope","sortByOceania","setSortByOceania","useEffect","axios","get","then","res","sort","a","b","localeCompare","sortCountries","filter","toLowerCase","includes","selectedRegions","push","length","id","onClick","window","scrollTo","classList","toggle","forhtml","type","placeholder","value","onChange","event","target","checked","map","Home","CountryDetails","countryName","match","params","wikipediaDescription","setWikipediaDescription","query","pages","Object","keys","svg","class","official","subregion","languages","currencies","symbol","extract","frameBorder","scrolling","App","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3cac013.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";//nous permet en cliquant dessus de naviguer de pages en pages\n\nconst Navigation = () => {\n    \n    return (\n        <div className=\"navigation\">\n            <NavLink exact to=\"/\" activeClassName=\"nav-active\">\n                Accueil\n            </NavLink>\n        </div>\n        \n    );\n};\n\nexport default Navigation;","import { Link } from \"react-router-dom\";\n\n\nconst Card = (props) => {\nconst { country } = props;\n    \n    return (\n        <div>\n            {country &&\n            <Link to={`/country/${country.name.common}`}>\n            <li className=\"card\">\n                <div className=\"card-img\">\n                    <img src={country.flags[\"svg\"]} alt=\"flag\"/>\n                </div>\n                <div className=\"card-content\">\n                    <ul>\n                        <li>{country.name.common}</li>\n                        <li>RÃ©gion: {country.region}</li>\n                        <li>Capital: {country.capital}</li>\n                        <li>population: {country.population}</li>\n                    </ul>\n                </div>\n            </li>\n            </Link>\n            }\n        </div>\n        \n    )\n}\n\nexport default Card;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nconst Countries = () => {\n    const arrow = document.querySelector(\"#arrow\");\n    const optionsButton = document.getElementsByClassName(\"optionsButton\");\n    const checkboxList = document.querySelector(\".continent-checkbox-list\");\n    \n    const moveTop = () => {\n        window.scrollTo(0, 0);\n    }\n    \n    const appear = () => {\n        checkboxList.classList.toggle(\"appear\");\n    }\n\n    const [data, setData] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [tapeInput, setTapeInput] = useState(\"\");\n    const [sortByPopulation, setSortByPopulation] = useState(false);\n    const [sortByAfrica, setSortByAfrica] = useState(false);\n    const [sortByAmerica, setSortByAmerica] = useState(false);\n    const [sortByAsia, setSortByAsia] = useState(false);\n    const [sortByEurope, setSortByEurope] = useState(false);\n    const [sortByOceania, setSortByOceania] = useState(false);\n\n    \n    useEffect(() => {\n        \n        axios.get(\n                    \"https://restcountries.com/v3.1/all\"\n                    //\"https://restcountries.com/v3.1/name/pe\"\n                ).then((res) => {\n                    const data = res.data.sort((a, b) => a.name.common.localeCompare(b.name.common)); \n                    setData(data);\n                    setFilteredData(data);\n                })\n    }, []);\n\n    useEffect(() => {\n        if(data === []) return;\n\n        let sortCountries = data.filter(country => country.name.common.toLowerCase().includes(tapeInput.toLowerCase()));\n\n        const selectedRegions = [];\n        if(sortByAfrica) selectedRegions.push(\"Africa\");\n        if(sortByAmerica) selectedRegions.push(\"Americas\");\n        if(sortByAsia) selectedRegions.push(\"Asia\")\n        if(sortByEurope) selectedRegions.push(\"Europe\");\n        if(sortByOceania) selectedRegions.push(\"Oceania\");\n\n        if(selectedRegions.length) {\n            sortCountries = sortCountries.filter(country => selectedRegions.includes(country.region));\n        }\n        \n        if(sortByPopulation) {\n            setFilteredData(sortCountries.sort((a, b) => b.population - a.population));\n        }else {\n            setFilteredData(sortCountries.sort((a, b) => a.name.common.localeCompare(b.name.common)));\n        }\n        \n    }, [tapeInput, sortByPopulation, sortByAfrica, sortByAmerica, sortByAsia, sortByEurope, sortByOceania]);\n\n    \n    return (\n        <div className=\"countries-list-page\">\n            <p id=\"arrow\" onClick={moveTop}>&#8593;</p>\n            <p className=\"optionsButton\" onClick={appear}>Options</p>\n            <form id=\"search-form\">\n                <br />\n                <label forhtml=\"search-input\">Rechercher un pays</label>\n                <br />\n                <input\n                    id=\"search-input\"\n                    type=\"text\"\n                    placeholder=\"Entrer un pays\"\n                    value={tapeInput}\n                    onChange={(event) => setTapeInput(event.target.value)}\n                />\n            </form>\n            <div className=\"continent-checkbox-list\">\n                <label id=\"checkbox-container\">\n                    Africa\n                    <input type=\"checkbox\" checked={sortByAfrica} onChange={() => setSortByAfrica(!sortByAfrica)}/>\n                    <span id=\"checkmark\"></span>\n                </label>\n                <label id=\"checkbox-container\">\n                    America\n                    <input type=\"checkbox\" checked={sortByAmerica} onChange={() => setSortByAmerica(!sortByAmerica)}/>\n                    <span id=\"checkmark\"></span>\n                </label>\n                <label id=\"checkbox-container\">\n                    Asia\n                    <input type=\"checkbox\" checked={sortByAsia} onChange={() => setSortByAsia(!sortByAsia)}/>\n                    <span id=\"checkmark\"></span>\n                </label>\n                <label id=\"checkbox-container\">\n                    Europe\n                    <input type=\"checkbox\" checked={sortByEurope} onChange={() => setSortByEurope(!sortByEurope)}/>\n                    <span id=\"checkmark\"></span>\n                </label>\n                <label id=\"checkbox-container\">\n                    Oceania\n                    <input type=\"checkbox\" checked={sortByOceania} onChange={() => setSortByOceania(!sortByOceania)}/>\n                    <span id=\"checkmark\"></span>\n                </label>\n                <label id=\"checkbox-container\">\n                    Pop. dÃ©croissante\n                    <input type=\"checkbox\" checked={sortByPopulation} onChange={() => setSortByPopulation(!sortByPopulation)}/>\n                    <span id=\"checkmark\"></span>\n                </label>\n            </div>\n            \n            <ul className=\"countries-list\">\n                {filteredData.map((country, id) => (\n                        //<li>{JSON.stringify(element.currencies[0])}</li>\n                        <Card country={country} key={id}/>\n                    )\n                )}\n            </ul>\n           \n        </div>\n    );\n};\n\nexport default Countries;","import Navigation from \"../components/Navigation\";\nimport Countries from \"../components/Countries\";\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <Navigation />\n            <Countries />\n        </div>\n    )\n}\n\nexport default Home;","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Navigation from \"../components/Navigation\";\n\n\nconst CountryDetails = (props) => {\n    let countryName = props.match.params.country;\n    let countryCurrencies;\n    const [wikipediaDescription, setWikipediaDescription] = useState();\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        axios.get(\n            `https://fr.wikipedia.org/w/api.php?format=json&origin=*&action=query&prop=extracts&exintro=&explaintext=&titles=${countryName}`\n            )\n            .then((res) => {\n                setWikipediaDescription(res.data.query.pages[Object.keys(res.data.query.pages)]);\n            });\n\n    }, []);\n\n    useEffect(() => {\n        axios.get(\n            `https://restcountries.com/v3.1/name/${countryName}?fullText=true`\n            ).then((res) => {\n                setData(res.data);\n            });\n\n    }, []);\n    \n    return (\n        <div className=\"country-details-page\">\n            <Navigation />\n            {data && \n                <div className=\"country-details\">\n                    <div className=\"country-details-flag\">\n                        <img src={data[0].flags.svg} alt=\"country-flag\"/>\n                    </div>\n                    <div class=\"county-characteristics\">\n                        {data[0].name.common? <h2>{data[0].name.common}</h2> : <h2>Nom : None</h2>}\n                        {data[0].name.official? <h2>Nom officiel : {data[0].name.official}</h2> : <h2>Nom officiel : None</h2>}\n                        {data[0].capital? <h3>Capitale : {data[0].capital}</h3> : <h3>Capitale : None</h3>}\n                        {data[0].region? <h3>Continent : {data[0].region}</h3> : <h3>Region : None</h3>}\n                        {data[0].subregion? <h3>Sous-RÃ©gion : {data[0].subregion}</h3> : <h3>Sous-RÃ©gion : None</h3>}\n                        {data[0].languages? <h3>Langage : {data[0].languages[Object.keys(data[0].languages)[0]]}</h3> : <h3>Langage : None</h3>}\n                        {data[0].currencies? <h3>Monnaie : {data[0].currencies[Object.keys(data[0].currencies)[0]].name} ({data[0].currencies[Object.keys(data[0].currencies)[0]].symbol })</h3> : <h3>Monnaie : None</h3>}\n                        {data[0].population? <h3>Population : {data[0].population}</h3> : <h3>Population : None</h3>}\n                    </div>\n                    {wikipediaDescription &&\n                        <div className=\"country-description-text\">\n                            <p>{wikipediaDescription.extract}</p>\n                        </div>\n                    }\n                </div>\n            }\n                \n            <iframe id=\"gmap_canvas\" src={`https://maps.google.com/maps?q=${countryName}&t=&z=5&ie=UTF8&iwloc=&output=embed`} frameBorder=\"0\" scrolling=\"no\">\n            </iframe>\n                \n        </div>\n    );\n}\n\nexport default CountryDetails;","//Permettre la navigation\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport CountryDetails from \"./pages/CountryDetails\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/country/:country\"  component={CountryDetails} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/index.scss\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \n"],"sourceRoot":""}